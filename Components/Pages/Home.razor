@page "/"
@using Skattjakt.Data
@inject NavigationManager NavManager
@inject TreasureMapService treasureMapService

<PageTitle>Skapa skattjakt</PageTitle>

<form class="form-content">
    <h1>Ange kartnamn</h1>

    <input class="map-name-input" type="text" @bind="MapName" @oninput="UpdateButtonState" />
    <button type="button" class="map-name-button" disabled="@IsDisabled" @onclick="CreateMap">Skapa</button>
    <button type="button" class="map-name-button" disabled="@IsDisabled" @onclick="GetMap">Ladda</button>

</form>

@code {
    private string MapName { get; set; } = "test";
    private bool IsDisabled;
    protected override void OnInitialized()
    {
        IsDisabled = string.IsNullOrEmpty(MapName);
        // Add maps to service from file on initialization
        treasureMapService.LoadMapsFromFile();
    }
    private void CreateMap()
    {
        if (!string.IsNullOrEmpty(MapName))
        {
            NavManager.NavigateTo($"/Skapa/{MapName}");
        }
        else
        {
            // TODO alert user instead of developer
            System.Diagnostics.Debug.Print("MapName är tomt eller null");
        }
    }
    private void GetMap()
    {
        if (!string.IsNullOrEmpty(MapName))
        {
            NavManager.NavigateTo($"/Jakt/{MapName}");
        }
        else
        {
            // TODO alert user instead of developer
            System.Diagnostics.Debug.Print("MapName är tomt eller null");
        }
    }
    private void UpdateButtonState(ChangeEventArgs e)
    {
        // Check if the input value is empty
        if (!string.IsNullOrEmpty(e.Value!.ToString()))
        {
            IsDisabled = string.IsNullOrWhiteSpace(e.Value.ToString());
            return;
        }
        IsDisabled = true;
        return;
    }
}
